"""""""""""""""""""""""""""""""""""""
"设置
"""""""""""""""""""""""""""""""""""""
set runtimepath+=~/.vim
set nocompatible											" 关闭 vi 兼容模式
set langmenu=zh_CN.UTF-8									" 指定菜单翻译的语言，从$RUMTIMEPATH/lange目录中载入相应的文件
" let $VIMFILES = $VIM."/vimfiles"							" 映射vimfiles目录为$VMIMFILES
let mapleader=","											" 映射快捷键开始命令为 , 号
let g:mapleader=","											" g:表示全局设置
set backspace=indent,eol,start								" 设定在插入状态用退格键和Delete键可以删除回车符
set whichwrap+=<,>,h,l										" 使左右移动键在行首或行尾可以移动到前一行或下一行
syntax on													" 自动语法高亮
set wildmenu												" 命令行补全增强模式,在输入命令时列出匹配项目 
set completeopt=menu,longest,preview						" 插入模式下补全功能的显示方式，分别支持弹出菜单式、插入匹配的最长文本、在预览窗口里显示
set pumheight=15	" 插入模式下弹出补全菜单的最大显示项目数
set lines=32		" 设置窗口行高
set columns=110		" 设置窗口宽度
winpos 50 0		" 设置初始窗口的坐标位置，相对于左上角的像素{x} {y}
"set equalalways	" 窗口在分割或关闭某窗口时自动使用相同的尺寸
set number		" 显示行号
set scrolloff=6		" 光标上下两侧最少保留的屏幕可见行数
set tabstop=4		" 设定 tab 长度为
set softtabstop=4	" 编辑时执行<tab>或<BackSpace>的时候,把<tab>作为空格的数目
set shiftwidth=4	" 设定 cindent、<<、>> 缩进每一步使用的空白数目
set smarttab		" 如果打开,行首的<tab>根据shiftwidth值插入。如果关闭，则取决于tapstop等值
set history=700		" 命令行历史记录的行数，可以用上下箭头选择
set nobackup		" 覆盖文件时不备份
set noswapfile		" 缓冲区不使用交换文件
set autochdir	" 会在打开文件、切换/删除缓冲区、打开/关闭窗口等操作时，选择文件所在的目录
set ignorecase		" 忽略大小写
set smartcase		" 如果搜索模式包含大写字母，忽略ignorecase
set nowrapscan		" 搜索到文件末尾时，不再回绕到文件首
set incsearch		" 输入搜索命令时，实时显示匹配结果
set hlsearch		" 搜索时高亮显示被找到的结果
set noerrorbells	" 关闭错误信息响铃
set novisualbell	" 关闭代替鸣叫的可视响铃
set t_vb=		" 取消可视铃声
filetype on		" 打开文件类型的侦测
filetype plugin on      " 打开特定的文件类型允许插件文件的载入
filetype indent on	" 为特定的文件载入相应的缩进文件
set autoindent		" 打开自动缩进，通常与smartindent同时打开
set smartindent		" 智能自动缩进
set iskeyword+=_,$,@,%,#,-	" 将这些字符作为关键字，带有这些符号的单词不换行
set showmatch			" 插入括号时，短暂的跳转到匹配的对应括号，显示匹配的时间由matchtime决定
set matchtime=3			" 单位是十分之一秒
set matchpairs=(:),{:},[:],<:>	" 匹配括号的规则，增加针对html的<>
set selectmode=mouse,key	" 指定什么场合开始选择时启用选择模式而不是可视模式
set selection=exclusive		" 设定选择区的行为为闭区间，选择的最后一个字符包含在操作范围之内

"set linespace=4		" 设置行间距，单位是像素
set shortmess=at		" 减少hit-enter屏幕消息提示的次数
"set shortmess+=I		" 启动时不显示介绍信息
set cmdheight=2			" 命令行使用的屏幕行数
"set cmdwinheight=2		" 命令行窗口的屏幕行数
set ruler			" 显示光标位置的行号和列号
set nosol			" 普通模式下光标行间移动时不到行首的第一个非空白，而是尽量在同一列
set list			" 制表符显示方式
set listchars=tab:\ \ ,trail:.,extends:>,precedes:<			" 制表符显示方式定义：trail为拖尾空白显示字符，extends和precedes分别是wrap关闭时，所在行在屏幕右边和左边显示的指示字符
set laststatus=2		" 最后一个窗口何时有状态栏：0为永不，1为至少两个窗口时，2为总是
set display=lastline		" 解决自动换行格式下, 如折行之后高在超过窗口高度看不到最后一行的问题
set mouse=a			" 确保在所有模式下识别鼠标
"set nocursorline		" 不突出显示当前行
set cursorline			" 设置光标十字坐标，高亮当前行
hi cursorline guibg=#333333   
" 高亮当前行的背景颜色
set cursorcolumn											" 设置光标十字坐标，高亮当前列
hi CursorColumn guibg=#333333								" 高亮当前列的背景颜色
set report=0												" 报告哪些行被修改过
set termencoding=Chinese									" 指定终端使用的编码,在+multi_byte特性下有效
set encoding=utf-8											" 设置vim内部使用的字符编码，应用于缓冲区、寄存器、表达式、viminfo保存的文本等。指定了新建文件时的默认字符编码
" 字符编码列表，编辑已存在文件时依次尝试的编码格式。不用于新文件
set fileencodings=ucs-bom,utf-8,cp936,gbk,gb2312,gb18030,big5,latin1	
set ambiwidth=double										" 当encoding=utf-8或别的unicode编码时有效,使用ASCII字符两倍的宽度处理东亚字符类
source $VIMRUNTIME/delmenu.vim								" 解决指定encoding后出现的菜单乱码,先删除菜单显示
source $VIMRUNTIME/menu.vim									" 再次读取缺省菜单
language messages zh_CN.utf-8								" 解决console和界面的乱码
if has("gui_running")				
	"set guioptions-=m										" 隐藏菜单栏
	"set guioptions-=T										" 隐藏工具栏
	set guioptions+=g										" 使不活动的菜单项变灰，默认是不显示
	set guioptions-=L										" 隐藏左侧滚动条
	"set guioptions-=r										" 隐藏右侧滚动条
	"set guioptions-=b										" 隐藏底部滚动条
	set guioptions+=e										" 打开GUI标签页支持
	set showtabline=2										" 指定何时显示标签页行,0为永远不会,1为至少有两个标签,2为永远会
	" F2 切换工具栏和菜单栏 Toggle Menu and Toolbar
  set guioptions-=m
  set guioptions-=T
  map <silent> <F2> :if &guioptions =~# 'T' <Bar>
        \set guioptions-=T <Bar>
        \set guioptions-=m <bar>
    \else <Bar>
        \set guioptions+=T <Bar>
        \set guioptions+=m <Bar>
    \endif<CR>
endif


highlight StatusLine guifg=White guibg=Orange				" 当前窗口状态栏颜色
highlight StatusLineNC guifg=LightGrey guibg=LightSlateGrey	" 非当前窗口状态栏颜色
highlight ModeMsg guifg=White guibg=LimeGreen				" 模式消息显示的颜色
" 设置在状态行显示的信息
set statusline=\ %<%F[%1*%M%*%n%R%H]%=\ %y\ %0(%{&fileformat}\ [%{(&fenc==\"\"?&enc:&fenc).(&bomb?\",BOM\":\"\")}]\ %c:%l/%L%)\ 



source ~/basic.vim  "引入高级配置

colorscheme lucius		" 配色方案
set guifont=YaHei\ Consolas\ Hybrid:h10						" 设置字体和大小
set foldlevel=100                  " 启动vim时不要自动折叠代码

map <F11> <Esc>:call libcallnr("gvimfullscreen.dll", "ToggleFullScreen", 0)<CR>